{"ast":null,"code":"var _jsxFileName = \"/home/phamvanhung/Product_test/Chatbot_GL2_version1/FlaskAIChatbot/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport ChatPanel from './components/ChatPanel';\nimport HistoryPanel from './components/HistoryPanel';\nimport MessageInput from './components/MessageInput';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [history, setHistory] = useState([]);\n  const [predefinedQuestions, setPredefinedQuestions] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  useEffect(() => {\n    // Fetch predefined questions on component mount\n    fetchPredefinedQuestions();\n\n    // Fetch chat history on component mount\n    fetchHistory();\n  }, []);\n  const fetchPredefinedQuestions = async () => {\n    try {\n      const response = await axios.get('/api/questions');\n      setPredefinedQuestions(response.data.questions);\n    } catch (error) {\n      console.error('Error fetching predefined questions:', error);\n    }\n  };\n  const fetchHistory = async () => {\n    try {\n      const response = await axios.get('/api/history');\n      setHistory(response.data.history);\n      setMessages(response.data.history);\n    } catch (error) {\n      console.error('Error fetching history:', error);\n    }\n  };\n  const handleSendMessage = async (message, isVoice = false) => {\n    if (!message.trim()) return;\n    const newMessage = {\n      text: message,\n      sender: 'user'\n    };\n    setMessages(prevMessages => [...prevMessages, newMessage]);\n    setIsLoading(true);\n    try {\n      let endpoint = '/api/chat';\n      let data = {\n        message\n      };\n      if (isVoice) {\n        endpoint = '/api/voice';\n        data = {\n          audio: message\n        }; // In voice mode, message contains the audio data\n      }\n      const response = await axios.post(endpoint, data);\n      setIsLoading(false);\n      setMessages(prevMessages => [...prevMessages, {\n        text: response.data.response,\n        sender: 'bot'\n      }]);\n\n      // Update history after sending a message\n      fetchHistory();\n    } catch (error) {\n      console.error('Error sending message:', error);\n      setIsLoading(false);\n      setMessages(prevMessages => [...prevMessages, {\n        text: 'Xin lỗi, có lỗi xảy ra khi xử lý tin nhắn của bạn.',\n        sender: 'bot'\n      }]);\n    }\n  };\n  const handleResetChat = async () => {\n    try {\n      await axios.post('/api/reset');\n      setMessages([]);\n      setHistory([]);\n    } catch (error) {\n      console.error('Error resetting chat:', error);\n    }\n  };\n  const handleSelectQuestion = question => {\n    // If question is an object with text property, use that\n    if (question && typeof question === 'object' && question.text) {\n      handleSendMessage(question.text);\n    } else {\n      // Otherwise use the question directly\n      handleSendMessage(question);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logo-container\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"\\u0110\\u1EA3o Tr\\u01B0\\u1EDDng Sa\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(HistoryPanel, {\n        history: history,\n        onSelectQuestion: handleSendMessage,\n        onReset: handleResetChat\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"predefined-questions\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"C\\xE2u h\\u1ECFi g\\u1EE3i \\xFD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: predefinedQuestions.map((question, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => handleSelectQuestion(question),\n            children: question.text || question\n          }, question.id || index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-panel\",\n      children: [/*#__PURE__*/_jsxDEV(ChatPanel, {\n        messages: messages,\n        isLoading: isLoading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MessageInput, {\n        onSendMessage: handleSendMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"lkz10moOcF3iBlRfqfAUnmKtx94=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","ChatPanel","HistoryPanel","MessageInput","jsxDEV","_jsxDEV","App","_s","messages","setMessages","history","setHistory","predefinedQuestions","setPredefinedQuestions","isLoading","setIsLoading","fetchPredefinedQuestions","fetchHistory","response","get","data","questions","error","console","handleSendMessage","message","isVoice","trim","newMessage","text","sender","prevMessages","endpoint","audio","post","handleResetChat","handleSelectQuestion","question","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSelectQuestion","onReset","map","index","onClick","id","onSendMessage","_c","$RefreshReg$"],"sources":["/home/phamvanhung/Product_test/Chatbot_GL2_version1/FlaskAIChatbot/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport ChatPanel from './components/ChatPanel';\nimport HistoryPanel from './components/HistoryPanel';\nimport MessageInput from './components/MessageInput';\n\nfunction App() {\n  const [messages, setMessages] = useState([]);\n  const [history, setHistory] = useState([]);\n  const [predefinedQuestions, setPredefinedQuestions] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    // Fetch predefined questions on component mount\n    fetchPredefinedQuestions();\n    \n    // Fetch chat history on component mount\n    fetchHistory();\n  }, []);\n\n  const fetchPredefinedQuestions = async () => {\n    try {\n      const response = await axios.get('/api/questions');\n      setPredefinedQuestions(response.data.questions);\n    } catch (error) {\n      console.error('Error fetching predefined questions:', error);\n    }\n  };\n\n  const fetchHistory = async () => {\n    try {\n      const response = await axios.get('/api/history');\n      setHistory(response.data.history);\n      setMessages(response.data.history);\n    } catch (error) {\n      console.error('Error fetching history:', error);\n    }\n  };\n\n  const handleSendMessage = async (message, isVoice = false) => {\n    if (!message.trim()) return;\n\n    const newMessage = { text: message, sender: 'user' };\n    setMessages(prevMessages => [...prevMessages, newMessage]);\n    setIsLoading(true);\n\n    try {\n      let endpoint = '/api/chat';\n      let data = { message };\n      \n      if (isVoice) {\n        endpoint = '/api/voice';\n        data = { audio: message }; // In voice mode, message contains the audio data\n      }\n\n      const response = await axios.post(endpoint, data);\n      \n      setIsLoading(false);\n      setMessages(prevMessages => [\n        ...prevMessages,\n        { text: response.data.response, sender: 'bot' }\n      ]);\n      \n      // Update history after sending a message\n      fetchHistory();\n    } catch (error) {\n      console.error('Error sending message:', error);\n      setIsLoading(false);\n      setMessages(prevMessages => [\n        ...prevMessages,\n        { \n          text: 'Xin lỗi, có lỗi xảy ra khi xử lý tin nhắn của bạn.', \n          sender: 'bot' \n        }\n      ]);\n    }\n  };\n\n  const handleResetChat = async () => {\n    try {\n      await axios.post('/api/reset');\n      setMessages([]);\n      setHistory([]);\n    } catch (error) {\n      console.error('Error resetting chat:', error);\n    }\n  };\n\n  const handleSelectQuestion = (question) => {\n    // If question is an object with text property, use that\n    if (question && typeof question === 'object' && question.text) {\n      handleSendMessage(question.text);\n    } else {\n      // Otherwise use the question directly\n      handleSendMessage(question);\n    }\n  };\n\n  return (\n    <div className=\"app-container\">\n      <div className=\"sidebar\">\n        <div className=\"logo-container\">\n          <h1>Đảo Trường Sa</h1>\n        </div>\n        <HistoryPanel \n          history={history} \n          onSelectQuestion={handleSendMessage} \n          onReset={handleResetChat} \n        />\n        <div className=\"predefined-questions\">\n          <h3>Câu hỏi gợi ý</h3>\n          <ul>\n            {predefinedQuestions.map((question, index) => (\n              <li \n                key={question.id || index} \n                onClick={() => handleSelectQuestion(question)}\n              >\n                {question.text || question}\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n      \n      <div className=\"main-panel\">\n        <ChatPanel \n          messages={messages} \n          isLoading={isLoading} \n        />\n        <MessageInput \n          onSendMessage={handleSendMessage} \n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}